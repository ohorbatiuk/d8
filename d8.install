<?php

declare(strict_types=1);

/**
 * @file
 * Install, update and uninstall functions for the d8 installation profile.
 */

use Drupal\Core\Extension\ModuleInstallerInterface;
use Drupal\d8\D8Setup;
use Drupal\d8\Form\D8CaptchaForm;
use Drupal\d8\Form\D8ConfigureForm;
use Drupal\RecipeKit\Installer\Hooks;

/**
 * Implements hook_install().
 */
function d8_install(bool $is_syncing): void {
  if (!$is_syncing) {
    \Drupal::service(ModuleInstallerInterface::class)->install(['service']);

    \Drupal::classResolver(D8Setup::class)->install();
  }
}

/**
 * Implements hook_install_tasks().
 */
function d8_install_tasks(array &$install_state): array {
  return Hooks::installTasks($install_state) + [
    'install_captcha_form' => [
      'display_name' => t('Activate captcha'),
      'type' => 'form',
      'function' => D8CaptchaForm::class,
    ],
  ];
}

/**
 * Implements hook_install_tasks_alter().
 */
function d8_install_tasks_alter(array &$tasks, array $install_state): void {
  Hooks::installTasksAlter($tasks, $install_state);

  $tasks['install_configure_form']['function'] = D8ConfigureForm::class;
}

/**
 * Implements hook_update_last_removed().
 */
function d8_update_last_removed(): int {
  return 11201;
}

/**
 * Process list of update hooks.
 *
 * @param int[] ...
 *   The update hook identifiers.
 */
function _d8_update(): void {
  $item = debug_backtrace(DEBUG_BACKTRACE_PROVIDE_OBJECT, 1)[0];

  if (preg_match('#([^/]+)\.install$#', $item['file'], $matches)) {
    $sandbox = [];

    foreach (func_get_args() as $number) {
      $function = "{$matches[1]}_update_$number";

      $function($sandbox);
    }
  }
}
